from aiogram import types, Bot, executor
from aiogram import Dispatcher
from aiogram.dispatcher import FSMContext
from aiogram.contrib.fsm_storage.memory import MemoryStorage

import markup

import classes

import db

bot = Bot(token="")#TOKEN –±–æ—Ç–∞
# –î–∏—Å–ø–µ—Ç—á–µ—Ä
dp = Dispatcher(bot,storage=MemoryStorage())



def check_sub_channel(chat_member):
    if chat_member.status != 'left':
        return True
    else:
        return False

@dp.message_handler(commands=['start'])
async def number(message: types.Message):
    print(message.chat.id)
    text = '''ü•∫ –ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –±–æ—Ç –ø–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞–º StandChillow, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥, —Ç–µ–±–µ –Ω—É–∂–Ω–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É, –∏ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã, –¥–∞–ª–µ–µ —Ç—ã —Å–º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥, –∞ —Ç–∞–∫–∂–µ, –ø—Ä–æ–º–æ–∫–æ–¥—ã —Ç—ã —Å–º–æ–∂–µ—à—å –ø–æ–ª—É—á–∞—Ç—å –∫–∞–∂–¥—ã–µ 24 —á–∞—Å–∞!\n
–ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è
–ï–°–õ–ò –ë–û–¢, –í –ö–û–¢–û–†–û–ú –í–´ –ù–ê–ñ–ò–ú–ê–ï–¢–ï –°–¢–ê–†–¢ –ü–†–û–°–ò–¢ –í–ê–° –ü–û–î–ï–õ–ò–¢–¨–°–Ø –°–í–û–ò–ú  –ù–û–ú–ï–†–û–ú –¢–ï–õ–ï–§–û–ù–ê, –ù–ò –í –ö–û–ï–ú –°–õ–£–ß–ê–ï –ù–ï –°–ö–ò–î–´–í–ê–ô–¢–ï –ï–ú–£‚ùóÔ∏è –£ –í–ê–° –£–ö–†–ê–î–£–¢ –ê–ö–ö–ê–£–ù–¢‚ùóÔ∏è‚ùóÔ∏è‚ùó\n
WARNING‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è
IF THE BOT IN WHICH YOU PRESS START ASKS YOU TO SHARE YOUR PHONE NUMBER, DO NOT TELL IT ‚ùóÔ∏è OR YOUR ACCOUNT WILL BE STOLE‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è\n
üëá –ñ–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ –æ—Ç–∫—Ä—ã–≤–∞–π –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–æ–º–æ–∫–æ–¥–∞–º –Ω–∞ StandChillow'''
    photo = "photo.jpg"
    with open(photo, 'rb') as phot:
        await bot.send_photo(message.chat.id,photo=phot,caption=text,reply_markup=markup.markup1())

@dp.message_handler(commands=['mailing'])
async def number(message: types.Message):

    if message.from_user.id != 6324881718:
        await message.answer('–í—ã –Ω–µ –∞–¥–º–∏–Ω')
        return
    await message.answer('–ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏')
    await classes.Mailing.message.set()

@dp.message_handler(state=classes.Mailing.message)
async def process_name(message: types.Message, state: FSMContext):
    await state.update_data(message=message.text)
    text = await state.get_data()
    for user in db.users():
        try:
            await bot.send_message(user[0],text['message'])
        except:
            pass
    await message.answer('–†–∞—Å—Å—ã–ª–∫–∞ —Å–¥–µ–ª–∞–Ω–∞')
    await state.finish()
@dp.message_handler(commands=['promo'])
async def number(message: types.Message):

    if message.chat.id != 6324881718:
        await message.answer('–í—ã –Ω–µ –∞–¥–º–∏–Ω')
        return
    await message.answer('–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥')
    await classes.Promo.message.set()

@dp.message_handler(state=classes.Promo.message)
async def process_name(message: types.Message, state: FSMContext):
    await state.update_data(message=message.text)
    text = await state.get_data()
    db.change(text['message'])
    await message.answer('–í—ã –ø–æ–º–µ–Ω—è–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥')
    await state.finish()

@dp.message_handler(commands=['channel'])
async def number(message: types.Message):

    if message.from_user.id != 6324881718:
        await message.answer('–í—ã –Ω–µ –∞–¥–º–∏–Ω')
        return
    await message.answer('–ù–∞–ø–∏—à–∏—Ç–µ –∫–∞–Ω–∞–ª—ã —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª \n\n–ü—Ä–∏–º–µ—Ä:https://t.me/...')
    await classes.Channels.channel.set()

@dp.message_handler(state=classes.Channels.channel)
async def process_name(message: types.Message, state: FSMContext):
    await state.update_data(channel=message.text)
    text = await state.get_data()
    db.add_channel(text['channel'])
    await message.answer('–ö–∞–Ω–∞–ª—ã –∏–∑–º–µ–Ω–µ–Ω—ã')
    await state.finish()

@dp.callback_query_handler(text='yes')
async def next_menu(callback: types.CallbackQuery):
    for i in markup.markup2()[1]:
        if not check_sub_channel(await bot.get_chat_member(chat_id=i[0].replace('https://t.me/','@'), user_id=callback.message.chat.id)):
            await callback.message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª—ã')
            return
    db.add_user(callback.message.chat.id)
    await callback.message.answer(f'–°–ø–∞—Å–∏–±–æ —á—Ç–æ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è!‚ù§Ô∏è\n–í–∞—à –ø—Ä–æ–º–æ–∫–æ–¥: {db.text()}\n\n–û—Å—Ç–∞–≤–∞–π—Ç–µ—Å—å —Å –Ω–∞–º–∏ –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –ø—Ä–æ–º–æ–∫–æ–¥—ã!ü•≥')
    await callback.message.delete()
@dp.callback_query_handler(text='next2')
async def next_menu(callback: types.CallbackQuery):
    for i in markup.markup2()[1]:
        id = i[0]
        if i[1] != None:
            id = i[1]
        else:
            id = id.replace('https://t.me/', '@')
        if not check_sub_channel(await bot.get_chat_member(chat_id=id, user_id=callback.message.chat.id)):
            await callback.message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª—ã')
            return
    await callback.message.delete()
    photo = "photo.jpg"
    with open(photo, 'rb') as phot:
        await bot.send_photo(callback.message.chat.id,phot,'üëá –û—Å—Ç–∞–ª–æ—Å—å –Ω–µ–º–Ω–æ–≥–æ, –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ —ç—Ç–∏ –∫–∞–Ω–∞–ª—ã:',reply_markup=markup.markup3()[0])
@dp.callback_query_handler(text='next1')
async def number(callback: types.CallbackQuery):
    await callback.message.delete()
    photo = "photo.jpg"
    with open(photo, 'rb') as phot:
        await bot.send_photo(callback.message.chat.id,photo=phot,caption='üëá –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥, —Ç–µ–±–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –≤—Å–µ—Ö:',reply_markup=markup.markup2()[0])


executor.start_polling(dp,skip_updates=True)